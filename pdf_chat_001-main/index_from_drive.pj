import os
import io
import fitz  # PyMuPDF
from dotenv import load_dotenv
import pinecone
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.http import MediaIoBaseDownload
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain.embeddings import OpenAIEmbeddings

# --- 環境変数と認証 ---
load_dotenv()
PINECONE_API_KEY = os.getenv("PINECONE_API_KEY")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
FOLDER_ID = os.getenv("PDF_FOLDER_ID")  # DriveのPDFフォルダID

# --- Google Drive 認証 ---
SCOPES = ["https://www.googleapis.com/auth/drive.readonly"]
info = {
    "type": os.getenv("TYPE"),
    "project_id": os.getenv("PROJECT_ID"),
    "private_key_id": os.getenv("PRIVATE_KEY_ID"),
    "private_key": os.getenv("PRIVATE_KEY").replace("\\n", "\n"),
    "client_email": os.getenv("CLIENT_EMAIL"),
    "client_id": os.getenv("CLIENT_ID"),
    "auth_uri": os.getenv("AUTH_URI"),
    "token_uri": os.getenv("TOKEN_URI"),
    "auth_provider_x509_cert_url": os.getenv("AUTH_PROVIDER_X509_CERT_URL"),
    "client_x509_cert_url": os.getenv("CLIENT_X509_CERT_URL")
}
credentials = service_account.Credentials.from_service_account_info(info, scopes=SCOPES)
drive_service = build("drive", "v3", credentials=credentials)

# --- Pinecone 初期化 ---
pinecone.init(api_key=PINECONE_API_KEY, environment="gcp-starter")  # or "us-west1-gcp"
index = pinecone.Index("pdf-index")

# --- Drive内のPDF一覧を取得 ---
query = f"'{FOLDER_ID}' in parents and mimeType='application/pdf'"
results = drive_service.files().list(q=query, fields="files(id, name)").execute()
files = results.get("files", [])

# --- テキスト分割・埋め込み準備 ---
text_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=100)
embedder = OpenAIEmbeddings(openai_api_key=OPENAI_API_KEY)

# --- 各PDFを処理 ---
for file in files:
    file_id = file["id"]
    file_name = file["name"]
    print(f"🔍 処理中: {file_name}")

    # DriveからPDFを読み込む
    request = drive_service.files().get_media(fileId=file_id)
    fh = io.BytesIO()
    downloader = MediaIoBaseDownload(fh, request)
    done = False
    while not done:
        status, done = downloader.next_chunk()
    fh.seek(0)

    # PDF → テキスト
    doc = fitz.open(stream=fh.read(), filetype="pdf")
    text = "\n".join([page.get_text() for page in doc])
    chunks = text_splitter.split_text(text)
    vectors = embedder.embed_documents(chunks)

    # Pineconeにアップロード
    ids = [f"{file_name}-{i}" for i in range(len(chunks))]
    metadata = [{"text": chunk, "source": file_name} for chunk in chunks]
    index.upsert(vectors=zip(ids, vectors, metadata))
